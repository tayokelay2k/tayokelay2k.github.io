<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Write for Web</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            box-sizing: border-box;
        }
        
        .writing-area {
            min-height: 500px;
            line-height: 1.8;
        }
        
        .word-count {
            transition: all 0.3s ease;
        }
        
        .toolbar-button {
            transition: all 0.2s ease;
        }
        
        .toolbar-button:hover {
            transform: translateY(-1px);
        }
        
        .save-indicator {
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        .save-indicator.show {
            opacity: 1;
        }
    </style>
</head>
<body class="bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen font-serif">
    <div class="container mx-auto px-4 py-8 max-w-4xl">
        <!-- Header -->
        <div class="text-center mb-8">
            <h1 class="text-4xl font-bold text-gray-800 mb-2">‚úçÔ∏è Write for Web</h1>
            <p class="text-gray-600">Your distraction-free writing space</p>
        </div>

        <!-- Toolbar -->
        <div class="bg-white rounded-lg shadow-lg p-4 mb-6">
            <div class="flex flex-wrap items-center justify-between gap-4">
                <div class="flex items-center gap-2">
                    <button onclick="formatText('bold')" class="toolbar-button bg-gray-100 hover:bg-gray-200 px-3 py-2 rounded-md text-sm font-medium">
                        <strong>B</strong>
                    </button>
                    <button onclick="formatText('italic')" class="toolbar-button bg-gray-100 hover:bg-gray-200 px-3 py-2 rounded-md text-sm font-medium">
                        <em>I</em>
                    </button>
                    <button onclick="formatText('underline')" class="toolbar-button bg-gray-100 hover:bg-gray-200 px-3 py-2 rounded-md text-sm font-medium">
                        <u>U</u>
                    </button>
                    <div class="w-px h-6 bg-gray-300 mx-2"></div>
                    <button onclick="insertHeading()" class="toolbar-button bg-gray-100 hover:bg-gray-200 px-3 py-2 rounded-md text-sm font-medium">
                        H1
                    </button>
                    <button onclick="insertList()" class="toolbar-button bg-gray-100 hover:bg-gray-200 px-3 py-2 rounded-md text-sm font-medium">
                        ‚Ä¢ List
                    </button>
                </div>
                
                <div class="flex items-center gap-4">
                    <div class="word-count text-sm text-gray-600">
                        <span id="wordCount">0</span> words ‚Ä¢ <span id="charCount">0</span> characters
                    </div>
                    <button onclick="saveDocument()" class="toolbar-button bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium">
                        üíæ Save
                    </button>
                </div>
            </div>
        </div>

        <!-- Writing Area -->
        <div class="bg-white rounded-lg shadow-lg p-8 mb-6">
            <input 
                type="text" 
                id="documentTitle" 
                placeholder="Document Title..." 
                class="w-full text-2xl font-bold text-gray-800 border-none outline-none mb-6 bg-transparent"
                oninput="updateCounts()"
            >
            
            <div 
                id="writingArea" 
                contenteditable="true" 
                class="writing-area w-full text-gray-700 text-lg border-none outline-none resize-none bg-transparent"
                placeholder="Start writing your masterpiece..."
                oninput="updateCounts()"
                onpaste="handlePaste(event)"
            ></div>
        </div>

        <!-- Document Actions -->
        <div class="bg-white rounded-lg shadow-lg p-6">
            <div class="flex flex-wrap items-center justify-between gap-4">
                <div class="flex items-center gap-4">
                    <button onclick="newDocument()" class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors">
                        üìÑ New Document
                    </button>
                    <button onclick="exportDocument()" class="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors">
                        üì§ Export
                    </button>
                </div>
                
                <div class="save-indicator text-green-600 text-sm font-medium" id="saveIndicator">
                    ‚úÖ Saved
                </div>
            </div>
        </div>

        <!-- Writing Stats -->
        <div class="mt-6 bg-white rounded-lg shadow-lg p-6">
            <h3 class="text-lg font-semibold text-gray-800 mb-4">üìä Writing Statistics</h3>
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                <div class="text-center">
                    <div class="text-2xl font-bold text-blue-600" id="paragraphCount">0</div>
                    <div class="text-sm text-gray-600">Paragraphs</div>
                </div>
                <div class="text-center">
                    <div class="text-2xl font-bold text-green-600" id="sentenceCount">0</div>
                    <div class="text-sm text-gray-600">Sentences</div>
                </div>
                <div class="text-center">
                    <div class="text-2xl font-bold text-purple-600" id="avgWordsPerSentence">0</div>
                    <div class="text-sm text-gray-600">Avg Words/Sentence</div>
                </div>
                <div class="text-center">
                    <div class="text-2xl font-bold text-orange-600" id="readingTime">0</div>
                    <div class="text-sm text-gray-600">Min Read</div>
                </div>
            </div>
        </div>
    </div>

    <script>
        let autoSaveTimer;
        
        // Set placeholder for contenteditable div
        const writingArea = document.getElementById('writingArea');
        writingArea.addEventListener('focus', function() {
            if (this.innerHTML === '') {
                this.innerHTML = '';
            }
        });
        
        writingArea.addEventListener('blur', function() {
            if (this.innerHTML === '') {
                this.setAttribute('data-placeholder', 'Start writing your masterpiece...');
            }
        });

        // Add CSS for placeholder
        const style = document.createElement('style');
        style.textContent = `
            [contenteditable]:empty:before {
                content: attr(data-placeholder);
                color: #9CA3AF;
                pointer-events: none;
            }
        `;
        document.head.appendChild(style);
        writingArea.setAttribute('data-placeholder', 'Start writing your masterpiece...');

        function formatText(command) {
            document.execCommand(command, false, null);
            writingArea.focus();
        }

        function insertHeading() {
            const selection = window.getSelection();
            if (selection.rangeCount > 0) {
                document.execCommand('formatBlock', false, 'h2');
                writingArea.focus();
            }
        }

        function insertList() {
            document.execCommand('insertUnorderedList', false, null);
            writingArea.focus();
        }

        function updateCounts() {
            const title = document.getElementById('documentTitle').value;
            const content = writingArea.innerText || '';
            const fullText = title + ' ' + content;
            
            // Word count
            const words = fullText.trim() === '' ? 0 : fullText.trim().split(/\s+/).length;
            document.getElementById('wordCount').textContent = words;
            
            // Character count
            const chars = fullText.length;
            document.getElementById('charCount').textContent = chars;
            
            // Paragraph count
            const paragraphs = content.trim() === '' ? 0 : content.split(/\n\s*\n/).filter(p => p.trim() !== '').length;
            document.getElementById('paragraphCount').textContent = paragraphs;
            
            // Sentence count
            const sentences = content.trim() === '' ? 0 : content.split(/[.!?]+/).filter(s => s.trim() !== '').length;
            document.getElementById('sentenceCount').textContent = sentences;
            
            // Average words per sentence
            const avgWords = sentences > 0 ? Math.round(words / sentences) : 0;
            document.getElementById('avgWordsPerSentence').textContent = avgWords;
            
            // Reading time (average 200 words per minute)
            const readingTime = Math.ceil(words / 200);
            document.getElementById('readingTime').textContent = readingTime;
            
            // Auto-save
            clearTimeout(autoSaveTimer);
            autoSaveTimer = setTimeout(autoSave, 2000);
        }

        function handlePaste(event) {
            event.preventDefault();
            const text = (event.clipboardData || window.clipboardData).getData('text');
            document.execCommand('insertText', false, text);
        }

        function saveDocument() {
            const title = document.getElementById('documentTitle').value || 'Untitled Document';
            const content = writingArea.innerHTML;
            
            // Save to localStorage
            const document = {
                title: title,
                content: content,
                lastModified: new Date().toISOString()
            };
            
            localStorage.setItem('webwriter_document', JSON.stringify(document));
            showSaveIndicator();
        }

        function autoSave() {
            saveDocument();
        }

        function showSaveIndicator() {
            const indicator = document.getElementById('saveIndicator');
            indicator.classList.add('show');
            setTimeout(() => {
                indicator.classList.remove('show');
            }, 2000);
        }

        function newDocument() {
            if (confirm('Start a new document? Any unsaved changes will be lost.')) {
                document.getElementById('documentTitle').value = '';
                writingArea.innerHTML = '';
                updateCounts();
            }
        }

        function exportDocument() {
            const title = document.getElementById('documentTitle').value || 'Untitled Document';
            const content = writingArea.innerText;
            const fullText = `${title}\n\n${content}`;
            
            const blob = new Blob([fullText], { type: 'text/plain' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `${title.replace(/[^a-z0-9]/gi, '_').toLowerCase()}.txt`;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            URL.revokeObjectURL(url);
        }

        // Load saved document on page load
        window.addEventListener('load', function() {
            const saved = localStorage.getItem('webwriter_document');
            if (saved) {
                const document = JSON.parse(saved);
                document.getElementById('documentTitle').value = document.title;
                writingArea.innerHTML = document.content;
                updateCounts();
            }
        });

        // Initial count update
        updateCounts();
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'987cbb529196893d',t:'MTc1OTMyOTgwMC4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
